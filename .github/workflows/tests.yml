name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Run tests
      run: uv run pytest -v

  check-openapi-schema:
    name: Check OpenAPI Schema
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --frozen --group dev

      - name: Check OpenAPI JSON and build client
        shell: bash
        env:
          PYTHONPATH: .
        run: |
          set -euo pipefail
          SCHEMA_PATH="$RUNNER_TEMP/openhands-openapi.json"

          # Generate OpenAPI JSON inline (no file left in repo)
          uv run python -c 'import os,json; from openhands_server.sdk_server.api import api; p=os.environ["SCHEMA_PATH"]; open(p,"w").write(json.dumps(api.openapi(), indent=2)); print(f"Wrote {p}")'

          # Generate client from the temp schema and **fail on any warnings** to check
          uv run openapi-python-client generate \
            --path "$SCHEMA_PATH" \
            --output-path openhands/client \
            --config openhands/server/client_gen_config.yaml \
            --meta uv \
            --overwrite \
            --fail-on-warning
          
          # Clean up temp schema
          rm -f "$SCHEMA_PATH"
